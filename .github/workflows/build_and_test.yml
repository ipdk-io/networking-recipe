name: "Networking Recipe CI Pipeline"

on:
  push:
    branches:
      - main
      - unit_test
  pull_request:
    branches:
      - main

concurrency:
  # if workflow for PR or push is already running stop it, and start new one
  group: build_and_test-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:

  build_and_test:
    timeout-minutes: 100
    runs-on: ubuntu-20.04
    steps:
      - name: 'Checkout p4-dpdk repo'
        uses: actions/checkout@v3
        with:
          repository: p4lang/p4-dpdk-target
          submodules: 'recursive'
          path: p4sde

      - name: 'Install dependencies'
        working-directory: ./p4sde/tools/setup
        run: |
              sudo apt update -y
              sudo apt install python python3-setuptools python3-pip python3-wheel python3-cffi sudo libssl-dev git libatomic1 libnl-route-3-dev curl tree -y
              pip3 install distro
              python3 install_dep.py
              cmake --version
              sudo apt-get purge cmake
              sudo rm -rf /usr/local/bin/cmake || true
              sudo rm -rf ~/.local/bin/cmake || true
              # removing cmake 3.25 and reinstalling 3.20, as build is failing with cmake 3.25
              wget https://cmake.org/files/v3.20/cmake-3.20.2-linux-x86_64.sh -O ${GITHUB_WORKSPACE}/cmake-3.20.2-linux-x86_64.sh
              chmod a+x ${GITHUB_WORKSPACE}/cmake-3.20.2-linux-x86_64.sh
              sudo mkdir -p /opt/rh/cmake
              cd ${GITHUB_WORKSPACE} && sudo sh cmake-3.20.2-linux-x86_64.sh --prefix=/opt/rh/cmake --skip-license
              sudo ln -s /opt/rh/cmake/bin/cmake /usr/local/bin/cmake
              cmake --version

      - name: 'Checkout Networking Recipe'
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          path: ipdk.recipe

      - name: 'Run Stratum unit tests'
        run: |
             cd /tmp
             curl -o bazel-4.2.3-installer-linux-x86_64.sh https://github.com/bazelbuild/bazel/releases/download/4.2.3/bazel-4.2.3-installer-linux-x86_64.sh
             chmod +x bazel-4.2.3-installer-linux-x86_64.sh
             ./bazel-4.2.3-installer-linux-x86_64.sh --user
             export PATH="$PATH:$HOME/bin"
             cd ${GITHUB_WORKSPACE}/ipdk.recipe/stratum/stratum
             bazel test //stratum/hal/lib/p4:all
             
      - name: 'Record Stratum Results'
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          report_paths: '**/stratum/stratum/bazel-testlogs/**/test.xml'
          
      - name: 'Run Krnlmon Unit tests'
        run: |
             cd ${GITHUB_WORKSPACE}/ipdk.recipe/build
             ctest
             more Testing/Temporary/LastTest.log

  run_ovs_unittests:
    timeout-minutes: 30
    runs-on: ubuntu-20.04
    steps:
      - name: 'Checkout p4-dpdk repo'
        uses: actions/checkout@v3
        with:
          repository: p4lang/p4-dpdk-target
          submodules: 'recursive'
          path: p4sde

      - name: 'Install dependencies'
        working-directory: ./p4sde/tools/setup
        run: |
              sudo apt update -y
              sudo apt install python python3-setuptools python3-pip python3-wheel python3-cffi sudo libssl-dev libatomic1 libnl-route-3-dev curl -y
              pip3 install distro
              python3 install_dep.py
              cmake --version
              sudo apt-get purge cmake
              sudo rm -rf /usr/local/bin/cmake || true
              sudo rm -rf ~/.local/bin/cmake || true
              # removing cmake 3.25 and reinstalling 3.20, as build is failing with cmake 3.25
              wget https://cmake.org/files/v3.20/cmake-3.20.2-linux-x86_64.sh -O ${GITHUB_WORKSPACE}/cmake-3.20.2-linux-x86_64.sh
              chmod a+x ${GITHUB_WORKSPACE}/cmake-3.20.2-linux-x86_64.sh
              sudo mkdir -p /opt/rh/cmake
              cd ${GITHUB_WORKSPACE} && sudo sh cmake-3.20.2-linux-x86_64.sh --prefix=/opt/rh/cmake --skip-license
              sudo ln -s /opt/rh/cmake/bin/cmake /usr/local/bin/cmake
              cmake --version

      - name: 'Checkout Networking Recipe'
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          path: ipdk.recipe
          
      - name: 'Run OVS unit tests'
        run: |
             cd ${GITHUB_WORKSPACE}/ipdk.recipe/ovs/ovs
             ./boot.sh
             mkdir test && cd test
             ../configure 
             make -j6 V=0
             make check TESTSUITEFLAGS=-j10 || true
             cd tests
             pwd
             tree L 3 .
             
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: ovs-ut-result
          path: ipdk.recipe/ovs/ovs/test/tests/testsuite.log       
    
  py_bandit_test:
     timeout-minutes: 10
     runs-on: ubuntu-20.04
     steps:
       - name: 'checkout Networking Recipe'
         uses: actions/checkout@v3
         with:
           path: ipdk.recipe

       - name: 'Run Bandit Test'
         uses: tj-actions/bandit@v5.1
         with:
           targets: |  # or a single string "."
            ./ipdk.recipe/clients/p4rt-ctl/p4rt-ctl.in
           options: "-v"
